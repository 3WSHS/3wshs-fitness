const fs = require('fs');
const path = require('path');

const srcFile = path.join(__dirname, '../src/app/stretches/page.tsx');
const destFile = path.join(__dirname, '../src/data/stretches.ts');

const fileContent = fs.readFileSync(srcFile, 'utf8');

// Extract the Stretch type
const stretchTypeMatch = fileContent.match(/interface Stretch \{[\s\S]*?\}/);
const stretchType = stretchTypeMatch ? stretchTypeMatch[0] : '';

// Find all variation arrays
const arrayRegex = /const (\w+) = \[((?:.|\n)*?)\];/g;
let match;
let arrays = [];
while ((match = arrayRegex.exec(fileContent)) !== null) {
  const name = match[1];
  let arr = match[2];
  // Strictly enforce correct difficulty values
  arr = arr.replace(/difficulty: ?(['"])Beginner\1( as 'Beginner')?/g, "difficulty: 'Beginner'");
  arr = arr.replace(/difficulty: ?(['"])Intermediate\1( as 'Intermediate')?/g, "difficulty: 'Intermediate'");
  arr = arr.replace(/difficulty: ?(['"])Advanced\1( as 'Advanced')?/g, "difficulty: 'Advanced'");
  // Fix any other string values
  arr = arr.replace(/difficulty: ?['"][^'"]+['"]/g, (m) => {
    if (/Beginner/.test(m)) return "difficulty: 'Beginner'";
    if (/Intermediate/.test(m)) return "difficulty: 'Intermediate'";
    if (/Advanced/.test(m)) return "difficulty: 'Advanced'";
    return m;
  });
  // Remove trailing commas after last object
  arr = arr.replace(/},\s*\]/g, '}\n]');
  arrays.push(`export const ${name} = [${arr}];`);
}

// Compose the new file
const output = `// AUTO-GENERATED BY migrate_stretches.js\n\n${stretchType}\n\n${arrays.join('\n\n')}`;

fs.writeFileSync(destFile, output, 'utf8');
console.log('Migration complete!'); 